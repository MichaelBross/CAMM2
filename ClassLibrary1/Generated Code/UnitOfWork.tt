<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string currentDirectory = System.IO.Path.GetDirectoryName(this.Host.TemplateFile);
	int Camm2Index = currentDirectory.IndexOf("CAMM2\\");
	string solutionRootDirectory = currentDirectory.Substring(0,Camm2Index);

	string CammXml = File.ReadAllText(solutionRootDirectory + "CAMM2\\CAMM2.Repository\\CAMM2Model.xml");
	
 	System.Xml.Linq.XDocument XmlDocu = System.Xml.Linq.XDocument.Parse(CammXml);
	var xmlClasses  = XmlDocu.Root.Elements("class").Select(xx => xx).ToList();
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Application.Interfaces;
using Persistance;

namespace Persistance
{
    public class UnitOfWork : IUnitOfWork
    {
        private readonly Camm2Context _context;

        public UnitOfWork(Camm2Context context)
        {
            _context = context;
<#  
foreach (var aClass in xmlClasses) 
{
        string className = aClass.Element("name").Value;
        string classNamePlural = aClass.Element("name").Value;
        if(className.EndsWith("y"))
        {
            classNamePlural = classNamePlural.TrimEnd('y');
            classNamePlural += "ie";
        }
#>
            <#=className#>s = new <#=className#>Repository(_context);            
<#
    }
#>
        }

<#  
foreach (var aClass in xmlClasses) 
{
        string className = aClass.Element("name").Value;
        string classNamePlural = aClass.Element("name").Value;
        if(className.EndsWith("y"))
        {
            classNamePlural = classNamePlural.TrimEnd('y');
            classNamePlural += "ie";
        }
#>
        public I<#=className#>Repository <#=className#>s { get; private set; }        
<#
    }
#>
        public int Complete()
        {
            return _context.SaveChanges();
        }

        public void Dispose()
        {
            _context.Dispose();
        }
    }
}
