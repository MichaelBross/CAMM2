@model Application.ViewModels.ParentItemVM
@using Application.Service
@{
    ViewBag.Title = Model.Code + " Documents";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="form-horizontal" style="padding: 0px; margin-top: 10px">
    <nav class="navbar navbar-light bg-light justify-content-between">
        
        <form class="form-inline">
            <div class="input-group">
                @*<button class="fg-button" href="#">DOCUMENTS applicable to</button>*@
                <div class="input-group-prepend">
                    <button class="btn btn-outline-primary">DOCUMENTS applicable to</button>
                </div>
                <select class="form-control btn-outline-primary" id="linkToSelect">
                    @foreach (var item in Model.ItemSelectList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
                <div class="input-group-append">
                    <input class="form-control btn-outline-primary" type="text" id="myInput" placeholder="Search">
                </div>
            </div>
        </form>
        <form class="form-inline">

            <button onclick="OpenLinkDocumentsPopUp()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Add Existing</button>
            <button onclick="HandleAddNewButtonClick()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Add New</button>
            <button onclick="RemoveDocumentLinks()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Remove</button>
        </form>

    </nav>
    @CammGrid.GenericJavascriptSourcedGrid(this, new DocumentListVM(), "LinkedDocumentsGrid")
</div>

@CammPopup.LinkDocuments(this, "LinkDocumentsPopup")

<script>
       
    var table = "";

    function GetLinkedDocuments() {

        $.ajax({
            url: "/Document/GetDocumentsLinkedToItem",
            data: $.param({ "type": linkToType, "typeId": linkToID }, true),
            success: function (response) {
                LinkedDocumentsGrid.loadTable(response.data);
            },
            error: function (response) {
                alert("Error getting linked documents.");
            }
        });
    }

    function OpenLinkDocumentsPopUp() {
        LinkDocumentsPopup.Type = linkToType;
        LinkDocumentsPopup.TypeId = linkToID;
        $('#LinkDocumentsPopup').modal('show');
    }

    function LinkDocumentsPopup_HandleDocumentsLinked() {
        GetLinkedDocuments();
    }

    function RemoveDocumentLinks() {

        var rows = LinkedDocumentsGrid.GetSelectedRows();
        if (rows.length === 0)
            return;

        var ids = [];
        for (i = 0; i < rows.length; i++) {
            ids.push(rows[i].Id);
        }

        $.ajax({
            "url": "RemoveDocumentLinks",
            "data": $.param({ "type": linkToType, "typeId": linkToID, "documentIdList": ids }, true),
            "success": function (result) {
                GetLinkedDocuments();
            }
        });
    }

    function HandleAddNewButtonClick() {
        var url = '@Url.Action("UploadDocuments", "Document")?linkToType=' + linkToType + '&linkToId='+ linkToID + '&linkToCD=' + linkToCD;
        window.location.href = url;
    }

    var linkToType = "@Model.Type";
    var linkToID = @Model.Id;
    var linkToCD = "@Model.Code";

    $(document).ready(function () {

        $('#myInput').autocomplete({
            source: '/' + linkToType + '/GetAutoCompleteList',
            select: function (event, ui) {
                linkToID = ui.item.id;
                linkToCD = ui.item.label;
                GetLinkedDocuments();
            }
        });

        $('#linkToSelect').change(function () {
            linkToType = $(this).find("option:selected").attr('value');
            $('#myInput').autocomplete({
                source: '/' + linkToType + '/GetAutoCompleteList'
            });
        });

        $('#linkToSelect').val(linkToType);

        $('#myInput').val(linkToCD);

        GetLinkedDocuments();
    });

</script>

<style>
    table, th, td {
        border: 1px solid black;
    }

    .form-inline > * {
        margin: 5px 3px;
    }
</style>
