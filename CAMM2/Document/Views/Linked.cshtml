@model Application.ViewModels.ParentItemVM
@using Application.Service
@{
    ViewBag.Title = Model.Code + " Documents";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="form-horizontal" style="padding: 0px; margin-top: 10px">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <a class="navbar-brand">DOCUMENTS applicable to</a>
            <form class="form-inline">

                <div class="input-group">
                    <div class="input-group-prepend">
                        <select class="form-control btn-outline-primary" id="linkToSelect">
                            @foreach (var item in Model.ItemSelectList)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </div>
                    <input class="form-control btn-outline-primary" type="text" id="myInput" placeholder="Search" style="min-width: 210px; max-width:840px" onkeypress="this.style.width = ((this.value.length + 1) * 11) + 'px';">
                </div>

            </form>
            <form style="padding-left: 20px">

                <button onclick="OpenLinkDocumentsPopUp()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Apply Documents</button>
                <button onclick="HandleAddNewButtonClick()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Upload Documents</button>
                <button onclick="RemoveDocumentLinks()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Remove Selected Documents</button>
                <button onclick="OpenFiles()" class="btn btn-outline-primary my-2 my-sm-0" type="button">Open Selected Document</button>
            </form>
        </div>

    </nav>
    @CammGrid.GenericJavascriptSourcedGrid(this, new DocumentListVM(), "LinkedDocumentsGrid")
</div>

@CammPopup.LinkDocuments(this, "LinkDocumentsPopup")
@CammPopup.Message(this, "MessagePopUp")

<script>
       
    var table = "";

    function GetLinkedDocuments() {

        $.ajax({
            url: "/Document/GetDocumentsLinkedToItem",
            data: $.param({ "type": linkToType, "typeId": linkToID }, true),
            success: function (response) {
                LinkedDocumentsGrid.loadTable(response.data);
            },
            error: function (response) {
                alert("Error getting linked documents.");
            }
        });
    }

    function OpenLinkDocumentsPopUp() {
        LinkDocumentsPopup.Type = linkToType;
        LinkDocumentsPopup.TypeId = linkToID;
        $('#LinkDocumentsPopup').modal('show');
    }

    function LinkDocumentsPopup_HandleDocumentsLinked() {
        GetLinkedDocuments();
    }

    function RemoveDocumentLinks() {

        var rows = LinkedDocumentsGrid.GetSelectedRows();
        if (rows.length === 0)
            return;

        var ids = [];
        for (i = 0; i < rows.length; i++) {
            ids.push(rows[i].Id);
        }

        $.ajax({
            "url": "RemoveDocumentLinks",
            "data": $.param({ "type": linkToType, "typeId": linkToID, "documentIdList": ids }, true),
            "success": function (result) {
                GetLinkedDocuments();
            }
        });
    }

    function OpenFiles() {

        var rows = LinkedDocumentsGrid.GetSelectedRows();
        if (rows.length === 0)
            return;

        if (rows.length > 1) {
            MessagePopUp.Show("Alert", "Please select only one document to open.");
            return;
        }
        var w = window.open('/Document/Download?documentID=' + rows[0].Id, "_blank");
        var title = rows[0].Code;
        setTimeout(function () { w.document.title = title; }, 1000);
    }

    function HandleAddNewButtonClick() {
        var url = '@Url.Action("UploadDocuments", "Document")?linkToType=' + linkToType + '&linkToId='+ linkToID + '&linkToCD=' + linkToCD;
        window.location.href = url;
    }

    var linkToType = "@Model.Type";
    var linkToID = @Model.Id;
    var linkToCD = "@Model.Code";

    $(document).ready(function () {

        $('#myInput').autocomplete({
            source: '/' + linkToType + '/GetAutoCompleteList',
            select: function (event, ui) {
                this.style.width = ((this.value.length + 1) * 11) + 'px';
                linkToID = ui.item.id;
                linkToCD = ui.item.label;
                GetLinkedDocuments();
            }
        });

        $('#linkToSelect').change(function () {
            linkToType = $(this).find("option:selected").attr('value');
            $('#myInput').autocomplete({
                source: '/' + linkToType + '/GetAutoCompleteList'
            });
            $('#myInput').val("");
        });

        $('#linkToSelect').val(linkToType);

        var itemCodeAutocomplete = $('#myInput');
        itemCodeAutocomplete.val(linkToCD);
        itemCodeAutocomplete.css("width", ((linkToCD.length + 1) * 11) + 'px');

        GetLinkedDocuments();
    });

</script>

<style>
    table, th, td {
        border: 1px solid black;
    }

    .form-inline > * {
        margin: 5px 3px;
    }
</style>
