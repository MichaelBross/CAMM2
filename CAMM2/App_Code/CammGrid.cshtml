
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using Application.Items;
@using System.ComponentModel;
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@using System;
@using Application.Service
@using Presentation

@helper SearchGrid(System.Web.Mvc.WebViewPage page, object listVM, string searchMethod)
{
    var Html = page.Html;

    <table id="searchResultsTable" class="table table-striped table-bordered" typeof="display" style="width:100%"></table>

    <script>
        var SearchGrid = function() {
            var vm = this;

            vm.search = function () {
                vm.selectedRow = "";
                vm.table.search(vm.searchstring()).draw();
            }

            vm.selectedRow = "";

            vm.configureTable = function (data) {
                if (vm.table) {
                    vm.table.destroy();
                }
                vm.table = $('#searchResultsTable').DataTable({
                    "ajax": {
                        "url": "@searchMethod",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "drawCallback": function (settings) {
                        var api = this.api();
                        if (vm.selectedRow === "") {
                            api.rows(0).select();
                        }
                        else {
                            vm.selectedRow.select();
                        }
                    },
                    "columns":
                        @Html.Raw(JavaScriptBuilder.TableColumns(listVM)),
                    "searching": "true",
                    "serverSide": "true",
                    "order": [0, "asc"],
                    "processing": "true",
                    "language": {
                        "processing": "processing, please wait"
                    },
                    "select": "single",
                    "dom": '<"top"i>rt<"bottom"lp><"clear">'
                });

                @*Load selected row into details *@
                $('#searchResultsTable tbody').on('click', 'tr', function () {
                    var data = vm.table.row($(this)).data();
                    vm.HandleRowSelected(data);
                });

            };

            @Html.Raw(JavaScriptBuilder.SelectLists(listVM));

            vm.getEnumItemName = function (myEnum, value) {
                var enumListName = myEnum + "List";
                var enumList = vm[enumListName];
                var n = ko.utils.arrayFirst(enumList(), function (i) {
                    return value === i.id;
                });
                return n.name;
            };

            vm.formatDate = function (d) {
                if (d === null) {
                    return "";
                }
                var dateInt = parseInt(d.substring(6, 19));
                var duedate = new Date(dateInt);
                return duedate.toLocaleDateString();
            };

            vm.configureTable();

            vm.HandleRowSelected = function(rowData) {
                try {
                    vm.selectedRow = rowData;
                    SearchGrid_HandleRowSelected(rowData);

                } catch (e) { }
            }
        }

        $(document).ready(function () {
            SearchGrid = new SearchGrid();
            ko.applyBindings(SearchGrid);
        });

    </script>
}