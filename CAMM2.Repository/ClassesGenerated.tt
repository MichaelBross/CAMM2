<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".txt" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string CammXml = File.ReadAllText("C:\\Users\\micha\\Source\\Repos\\CAMM2\\CAMM2.Repository\\CAMM2Model.xml");	 
    // Certainly you would normally load the model data from a file using 
	// the relative path of the template as shown below:
	// string SampleInputFileContent = System.IO.File.ReadAllText( 
    // System.IO.Path.GetDirectoryName(this.Host.TemplateFile) + "\\datafile.xml"); 
	
 	System.Xml.Linq.XDocument XmlDocu = System.Xml.Linq.XDocument.Parse(CammXml);
	var xmlClasses  = XmlDocu.Root.Elements("class").Select(xx => xx).ToList();
#>
namespace Domain
{
<#           
foreach (var aClass in xmlClasses) 
{
	var inheritsXml = aClass.Element("inherits");
	var inheritsText = "";
	if(inheritsXml != null)
		inheritsText = " : " + inheritsXml.Value;
#>
	public class <#= aClass.Element("name").Value #><#= inheritsText #>
	{	 
<#
	var properties = aClass.Elements("property").Select(ww => ww).ToList();
	foreach (var prop in properties) 
	{
		List<string> annotationList = new List<string>();
        try 
        {	        
			var annotations = prop.Element("annotations").Value;
			annotationList = annotations.Split(',').ToList();
        }
        catch (Exception ex)
		{
		}

		foreach(var anno in annotationList)
        {
#>
		<#= anno #>
<#
        }
#>
		public <#= prop.Element("type").Value #> <#= prop.Element("name").Value #> { get; set; }

<#
	}
#>
	}

<#
}
#>

