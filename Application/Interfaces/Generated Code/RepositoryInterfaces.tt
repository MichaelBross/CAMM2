<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string currentDirectory = System.IO.Path.GetDirectoryName(this.Host.TemplateFile);
	int Camm2Index = currentDirectory.IndexOf("CAMM2\\");
	string solutionRootDirectory = currentDirectory.Substring(0,Camm2Index);

	string CammXml = File.ReadAllText(solutionRootDirectory + "CAMM2\\CAMM2.Repository\\CAMM2Model.xml");
	
 	System.Xml.Linq.XDocument XmlDocu = System.Xml.Linq.XDocument.Parse(CammXml);
	var xmlClasses  = XmlDocu.Root.Elements("class").Select(xx => xx).ToList();
#>
using System.Collections.Generic;
using Domain;

namespace Application.Interfaces
{
<#
foreach (var aClass in xmlClasses) 
{
    string className = aClass.Element("name").Value;
    string classNamePlural = aClass.Element("name").Value;
    if(className.EndsWith("y"))
    {
        classNamePlural = classNamePlural.TrimEnd('y');
        classNamePlural += "ie";
    }

	var properties = aClass.Elements("property").Select(ww => ww).ToList();
	var typesString = properties.Elements("type").Where(t => t.Value == "string").Select(t => t).ToList();
	var propertiesTypesString = typesString.Ancestors("property").ToList();
#>
    public partial interface I<#=className#>Repository : IRepository<<#=className#>> 
    {
<# if(propertiesTypesString.Count > 0){ #>
        IEnumerable<<#=className#>> Search(SearchParameters searchParams);
<# } #>
    }

<#
    }
#>
}
