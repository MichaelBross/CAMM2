<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#
	string CammXml = File.ReadAllText("C:\\Users\\micha\\Source\\Repos\\CAMM2\\CAMM2.Repository\\CAMM2Model.xml");	 
    // Certainly you would normally load the model data from a file using 
	// the relative path of the template as shown below:
	// string SampleInputFileContent = System.IO.File.ReadAllText( 
    // System.IO.Path.GetDirectoryName(this.Host.TemplateFile) + "\\datafile.xml"); 
	
 	System.Xml.Linq.XDocument XmlDocu = System.Xml.Linq.XDocument.Parse(CammXml);
	var xmlClasses  = XmlDocu.Root.Elements("class").Select(xx => xx).ToList();
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Application.Interfaces
{
    public interface IUnitOfWork : IDisposable
    {
<#
foreach (var aClass in xmlClasses) 
{
        string className = aClass.Element("name").Value;
        string classNamePlural = aClass.Element("name").Value;
        if(className.EndsWith("y"))
        {
            classNamePlural = classNamePlural.TrimEnd('y');
            classNamePlural += "ie";
        }
#>
        I<#= className #>Repository <#= className #>s { get; } 
        
<#
    }
#>
        int Complete();
    }
}
